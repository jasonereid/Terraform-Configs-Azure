# don't forget to setup your variables.tf and your output.tf! 
# https://github.com/jasonereid/Terraform-Configs-Azure/blob/main/variables.tf
# https://github.com/jasonereid/Terraform-Configs-Azure/blob/main/output.tf
# after applying your config, run this to capture your ssh key - terraform output -raw tls_private_key > id_rsa

terraform {

  required_version = ">=0.12"

  required_providers {
    azurerm = {
      source = "hashicorp/azurerm"
      version = "~>2.0"
    }
  }
}

provider "azurerm" {
  subscription_id = var.subscription_id
  features {}
}


# Create virtual network
resource "azurerm_virtual_network" "mytestvnet" {
  name                = "mytestvnet"
  address_space       = ["10.0.0.0/16"]
  location            = var.resource_group_location
  resource_group_name = var.resource_group_name
}

# Create subnet 
resource "azurerm_subnet" "subnet2" {
  name                 = "subnet2"
  resource_group_name  = var.resource_group_name
  virtual_network_name = azurerm_virtual_network.mytestvnet.name
  address_prefixes     = ["10.0.2.0/24"]
}

# Create network interface
resource "azurerm_network_interface" "myNIC" {
	count				= var.node_count
	name                = "myNIC${count.index}"
	location            = var.resource_group_location
	resource_group_name = var.resource_group_name
	
	ip_configuration {
		name                          = "myNicConfiguration"
		subnet_id                     = azurerm_subnet.subnet2.id
		private_ip_address_allocation = "dynamic"
	}
}

# Create (and display) an SSH key
resource "tls_private_key" "example_ssh" {
  algorithm = "RSA"
  rsa_bits  = 4096
}

# Create virtual machine
resource "azurerm_linux_virtual_machine" "linuxnode" {
  count					= "${var.node_count}"
  name                  = "linuxnode-${count.index}"
  location              = var.resource_group_location
  resource_group_name   = var.resource_group_name
  network_interface_ids = [element(azurerm_network_interface.myNIC.*.id, count.index)]
  size                  = "Standard_DS1_v2"

  os_disk {
    name                 = "myOsDisk-${count.index}"
    caching              = "ReadWrite"
    storage_account_type = "Premium_LRS"
  }

  source_image_reference {
    publisher = "Canonical"
    offer     = "UbuntuServer"
    sku       = "18.04-LTS"
    version   = "latest"
  }

  computer_name                   = "linuxnode-${count.index}"
  admin_username                  = "azureuser1"
  disable_password_authentication = true
# uses the ssh key we generated earlier
  admin_ssh_key {
    username   = "azureuser1"
    public_key = tls_private_key.example_ssh.public_key_openssh
  }
}

